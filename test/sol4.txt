6 Q 3 10
148 solution(s) found.
Time (ms): 1502
3 * (6 - 10 + 12)
3 * ((6 - 10) + 12)
3 * (6 - (10 - 12))
3 * (6 + 12 - 10)
3 * ((6 + 12) - 10)
3 * (6 + (12 - 10))
3 * 10 + 6 - 12
(3 * 10) + 6 - 12
3 * (10 - 6) + 12
3 * 10 + (6 - 12)
(3 * 10 + 6) - 12
((3 * 10) + 6) - 12
(3 * (10 - 6)) + 12
(3 * 10) + (6 - 12)
3 * 10 - 12 + 6
(3 * 10) - 12 + 6
3 * 10 - (12 - 6)
(3 * 10 - 12) + 6
3 * (10 - 12 / 6)
((3 * 10) - 12) + 6
3 * (10 - (12 / 6))
(3 * 10) - (12 - 6)
3 * (12 + 6 - 10)
3 * ((12 + 6) - 10)
3 * (12 + (6 - 10))
3 * (12 - 10 + 6)
3 * ((12 - 10) + 6)
3 * (12 - (10 - 6))
6 + 3 * 10 - 12
6 / 3 + 10 + 12
(6 / 3) + 10 + 12
6 + (3 * 10) - 12
6 / 3 + (10 + 12)
(6 + 3 * 10) - 12
(6 / 3 + 10) + 12
6 + (3 * 10 - 12)
((6 / 3) + 10) + 12
(6 + (3 * 10)) - 12
6 + ((3 * 10) - 12)
(6 / 3) + (10 + 12)
6 / 3 + 12 + 10
(6 / 3) + 12 + 10
6 / 3 + (12 + 10)
(6 / 3 + 12) + 10
((6 / 3) + 12) + 10
(6 / 3) + (12 + 10)
6 + 10 * 3 - 12
6 * 10 - 3 * 12
(6 * 10) - 3 * 12
6 + (10 * 3) - 12
6 * 10 - (3 * 12)
(6 + 10 * 3) - 12
6 + (10 * 3 - 12)
(6 + (10 * 3)) - 12
6 + ((10 * 3) - 12)
(6 * 10) - (3 * 12)
6 * 10 - 12 * 3
(6 * 10) - 12 * 3
6 * 10 - (12 * 3)
(6 - 10 + 12) * 3
(6 * 10 + 12) / 3
((6 - 10) + 12) * 3
((6 * 10) + 12) / 3
(6 - (10 - 12)) * 3
(6 * 10) - (12 * 3)
6 - 12 + 3 * 10
(6 - 12) + 3 * 10
6 - 12 + (3 * 10)
6 - (12 - 3 * 10)
6 - (12 - (3 * 10))
(6 - 12) + (3 * 10)
6 - 12 + 10 * 3
(6 - 12) + 10 * 3
6 - 12 + (10 * 3)
(6 + 12 - 10) * 3
6 - (12 - 10 * 3)
((6 + 12) - 10) * 3
(6 + (12 - 10)) * 3
6 - (12 - (10 * 3))
(6 - 12) + (10 * 3)
10 * 3 + 6 - 12
(10 * 3) + 6 - 12
10 * 3 + (6 - 12)
(10 * 3 + 6) - 12
((10 * 3) + 6) - 12
(10 * 3) + (6 - 12)
10 * 3 - 12 + 6
(10 * 3) - 12 + 6
10 * 3 - (12 - 6)
(10 * 3 - 12) + 6
((10 * 3) - 12) + 6
(10 * 3) - (12 - 6)
10 + 6 / 3 + 12
10 * 6 - 3 * 12
(10 - 6) * 3 + 12
(10 * 6) - 3 * 12
10 + (6 / 3) + 12
10 * 6 - (3 * 12)
(10 + 6 / 3) + 12
10 + (6 / 3 + 12)
((10 - 6) * 3) + 12
(10 + (6 / 3)) + 12
10 + ((6 / 3) + 12)
(10 * 6) - (3 * 12)
10 * 6 - 12 * 3
(10 * 6) - 12 * 3
10 * 6 - (12 * 3)
(10 * 6 + 12) / 3
((10 * 6) + 12) / 3
(10 * 6) - (12 * 3)
10 + 12 + 6 / 3
(10 + 12) + 6 / 3
10 + 12 + (6 / 3)
(10 - 12 / 6) * 3
10 + (12 + 6 / 3)
(10 - (12 / 6)) * 3
10 + (12 + (6 / 3))
(10 + 12) + (6 / 3)
12 - 3 * (6 - 10)
12 - (3 * (6 - 10))
12 + 3 * (10 - 6)
12 + (3 * (10 - 6))
12 + 6 / 3 + 10
12 + (6 / 3) + 10
(12 + 6 / 3) + 10
12 + (6 / 3 + 10)
(12 + (6 / 3)) + 10
12 + ((6 / 3) + 10)
12 - (6 - 10) * 3
(12 + 6 - 10) * 3
(12 + 6 * 10) / 3
((12 + 6) - 10) * 3
(12 + (6 - 10)) * 3
(12 + (6 * 10)) / 3
12 - ((6 - 10) * 3)
12 + 10 + 6 / 3
(12 + 10) + 6 / 3
12 + (10 - 6) * 3
12 + 10 + (6 / 3)
(12 + 10 * 6) / 3
(12 - 10 + 6) * 3
12 + (10 + 6 / 3)
((12 - 10) + 6) * 3
(12 + (10 * 6)) / 3
(12 - (10 - 6)) * 3
12 + ((10 - 6) * 3)
12 + (10 + (6 / 3))
(12 + 10) + (6 / 3)
